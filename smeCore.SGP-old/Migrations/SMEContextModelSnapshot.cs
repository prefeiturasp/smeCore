// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using smeCore.SGP.Contexts;

namespace smeCore.SGP.Migrations
{
    [DbContext(typeof(SMEContext))]
    partial class SMEContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("smeCore.Models.Authentication.LoggedUser", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpiresAt");

                    b.Property<DateTime>("LastLogin");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Username");

                    b.HasKey("id");

                    b.ToTable("LoggedUsers");
                });

            modelBuilder.Entity("smeCore.Models.Planning.Annual", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Classroom");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("DescriptionB1");

                    b.Property<string>("DescriptionB2");

                    b.Property<string>("DescriptionB3");

                    b.Property<string>("DescriptionB4");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("School");

                    b.Property<int?>("SchoolYear");

                    b.Property<string>("SelectedLearningObjectivesB1");

                    b.Property<string>("SelectedLearningObjectivesB2");

                    b.Property<string>("SelectedLearningObjectivesB3");

                    b.Property<string>("SelectedLearningObjectivesB4");

                    b.Property<string>("UserId");

                    b.HasKey("id");

                    b.ToTable("Annuals");
                });

            modelBuilder.Entity("smeCore.Models.Planning.Appointment", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Classroom");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("School");

                    b.Property<int?>("SchoolYear");

                    b.Property<string>("TagColor");

                    b.Property<string>("UserId");

                    b.HasKey("id");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("smeCore.Models.Planning.Cycle", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Classroom");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("School");

                    b.Property<int?>("SchoolYear");

                    b.Property<string>("SelectedKnowledgeMatrix");

                    b.Property<string>("SelectedODS");

                    b.Property<int>("Type");

                    b.Property<string>("UserId");

                    b.HasKey("id");

                    b.ToTable("Cycles");
                });
#pragma warning restore 612, 618
        }
    }
}

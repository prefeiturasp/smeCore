<?xml version="1.0"?>
<doc>
    <assembly>
        <name>smeCore.API</name>
    </assembly>
    <members>
        <member name="T:smeCore.API.Controllers.Authentication.AuthController">
            <summary>
            Controller da API responsável pela autenticação do usuário.
            </summary>
        </member>
        <member name="M:smeCore.API.Controllers.Authentication.AuthController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,smeCore.API.Service.Interface.AuthInterfaces.IAuthService)">
            <summary>
            Construtor padrão para o AuthController, faz injeção de dependências de IConfiguration e SMEContext.
            </summary>
            <param name="config">Depêndencia de configurações</param>
        </member>
        <member name="M:smeCore.API.Controllers.Authentication.AuthController.LoginJWT(smeCore.Models.Authentication.Credential)">
            <summary>
            Método para efetuar o login do usuário utilizando o sistema http://identity.sme.prefeitura.sp.gov.br para validar o usuário e receber um token JWT.
            </summary>
            <param name="credential">Objeto que contém informações da credencial do usuário, neste caso específico é necessário o atributo username e password</param>
            <returns>Token e RefreshToken gerado à partir das informações do usuário encontrado, caso não seja encontrado nenhum usuário correspondente à credencial, o método retorna usuário não autorizado.</returns>
        </member>
        <member name="M:smeCore.API.Controllers.Authentication.AuthController.RefreshLoginJWT(smeCore.Models.Authentication.Credential)">
            <summary>
            Método para renovar o token através do refresh token e nome de usuário.
            </summary>
            <param name="credential">Objeto que contém informações da credencial do usuário, neste caso específico é necessário o atributo username e refreshToken</param>
            <returns>Token e RefreshToken gerado à partir do RefreshToken utilizado, caso o RefreshToken não seja válido, o método retorna usuário não autorizado.</returns>
        </member>
        <member name="M:smeCore.API.Controllers.Authentication.AuthController.LoginIdentity(smeCore.Models.Authentication.Credential)">
            <summary>
            Método para fazer login do usuário utilizando o sistema http://identity.sme.prefeitura.sp.gov.br.
            </summary>
            <param name="credential">Objeto que contém informações da credencial do usuário, neste caso específico é necessário o atributo username e password</param>
            <returns>Informações sobre o usuário que está tentando logar (tokens de acesso e cookies), caso não seja encontrado nenhum usuário correspondente à credencial, o método retorna usuário não autorizado.</returns>
        </member>
        <member name="M:smeCore.API.Controllers.Authentication.AuthController.LogoutIdentity(smeCore.Models.Authentication.Credential)">
            <summary>
            Método para fazer o logout utilizando o sistema http://identity.sme.prefeitura.sp.gov.br.
            </summary>
            <param name="credential">Objeto que contém informações da credencial do usuário, neste caso específico é necessário o atributo username</param>
            <returns>Sucesso (status code 200) caso seja possível deslogar o usuário desejado.</returns>
        </member>
    </members>
</doc>
